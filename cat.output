Terminals unused in grammar

   TOKEN_INSERT
   TOKEN_INCREMENT
   TOKEN_DECREMENT
   TOKEN_NOT
   TOKEN_COMP
   TOKEN_LOGICAL_NOT
   TOKEN_GE
   TOKEN_LE
   TOKEN_PLUS_ASSIGN
   TOKEN_MINUS_ASSIGN
   TOKEN_MULT_ASSIGN
   TOKEN_DIV_ASSIGN


State 0 conflicts: 15 shift/reduce
State 11 conflicts: 16 shift/reduce
State 119 conflicts: 15 shift/reduce
State 124 conflicts: 15 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: /* empty */
    3               | statement
    4               | statement_list statement

    5 statement: declaration TOKEN_SEMICOLON
    6          | assignment_expr TOKEN_SEMICOLON
    7          | if_statement
    8          | switch_statement
    9          | function_declaration
   10          | import_statement TOKEN_SEMICOLON
   11          | function_call TOKEN_SEMICOLON
   12          | function_call block
   13          | TOKEN_BREAK TOKEN_SEMICOLON
   14          | block
   15          | function_call TOKEN_BLOCK_START block
   16          | TOKEN_EXERT expression TOKEN_SEMICOLON

   17 parameter_list: parameter
   18               | parameter_list TOKEN_COMMA parameter
   19               | /* empty */

   20 parameter: TOKEN_INT TOKEN_ID
   21          | TOKEN_FLOAT TOKEN_ID

   22 function_call: TOKEN_ID TOKEN_LPAREN argument_list TOKEN_RPAREN

   23 argument_list: expression
   24              | argument_list TOKEN_COMMA expression
   25              | /* empty */

   26 import_statement: TOKEN_IMPORT TOKEN_ID

   27 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

   28 case_list: case_statement
   29          | case_list case_statement

   30 case_statement: TOKEN_CASE expression TOKEN_COLON statement_list
   31               | TOKEN_DEFAULT TOKEN_COLON statement_list

   32 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement

   33 block: TOKEN_LBRACE statement_list TOKEN_RBRACE
   34      | TOKEN_LBRACE TOKEN_RBRACE

   35 else_if_list: /* empty */
   36             | else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block

   37 else_statement: TOKEN_ELSE block
   38               | /* empty */

   39 expression: assignment_expr

   40 declaration: variable_declaration

   41 assignment_expr: TOKEN_ID TOKEN_ASSIGN expression
   42                | logical_expr

   43 logical_expr: relational_expr
   44             | logical_expr TOKEN_AND relational_expr
   45             | logical_expr TOKEN_OR relational_expr

   46 relational_expr: additive_expr
   47                | relational_expr TOKEN_GT additive_expr
   48                | relational_expr TOKEN_LT additive_expr
   49                | relational_expr TOKEN_EQ additive_expr
   50                | relational_expr TOKEN_NEQ additive_expr

   51 additive_expr: multiplicative_expr
   52              | additive_expr TOKEN_PLUS multiplicative_expr
   53              | additive_expr TOKEN_MINUS multiplicative_expr

   54 multiplicative_expr: unary_expr
   55                    | multiplicative_expr TOKEN_MULT unary_expr
   56                    | multiplicative_expr TOKEN_DIV unary_expr

   57 unary_expr: TOKEN_MINUS unary_expr
   58           | primary_expr

   59 primary_expr: TOKEN_INT_VALUE
   60             | TOKEN_FLOAT_VALUE
   61             | TOKEN_STRING_VALUE
   62             | TOKEN_ID
   63             | TOKEN_LPAREN expression TOKEN_RPAREN

   64 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block

   65 variable_declaration: TOKEN_INT TOKEN_ID
   66                     | TOKEN_FLOAT TOKEN_ID
   67                     | TOKEN_FLOAT TOKEN_ID TOKEN_ASSIGN expression
   68                     | TOKEN_INT TOKEN_ID TOKEN_ASSIGN expression


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_IF (258) 32
TOKEN_ELSE (259) 37
TOKEN_ELIF (260) 36
TOKEN_SWITCH (261) 27
TOKEN_CASE (262) 30
TOKEN_DEFAULT (263) 31
TOKEN_BREAK (264) 13
TOKEN_FUNCTION (265) 64
TOKEN_INT (266) 20 65 68
TOKEN_FLOAT (267) 21 66 67
TOKEN_IMPORT (268) 26
TOKEN_INSERT (269)
TOKEN_EXERT (270) 16
TOKEN_PLUS (271) 52
TOKEN_MINUS (272) 53 57
TOKEN_MULT (273) 55
TOKEN_DIV (274) 56
TOKEN_INCREMENT (275)
TOKEN_DECREMENT (276)
TOKEN_NOT (277)
TOKEN_COMP (278)
TOKEN_AND (279) 44
TOKEN_OR (280) 45
TOKEN_LOGICAL_NOT (281)
TOKEN_EQ (282) 49
TOKEN_NEQ (283) 50
TOKEN_GT (284) 47
TOKEN_LT (285) 48
TOKEN_GE (286)
TOKEN_LE (287)
TOKEN_ASSIGN (288) 41 67 68
TOKEN_PLUS_ASSIGN (289)
TOKEN_MINUS_ASSIGN (290)
TOKEN_MULT_ASSIGN (291)
TOKEN_DIV_ASSIGN (292)
TOKEN_SEMICOLON (293) 5 6 10 11 13 16
TOKEN_COLON (294) 30 31
TOKEN_LPAREN (295) 22 27 32 36 63 64
TOKEN_RPAREN (296) 22 27 32 36 63 64
TOKEN_LBRACE (297) 27 33 34
TOKEN_RBRACE (298) 27 33 34
TOKEN_COMMA (299) 18 24
TOKEN_BLOCK_START (300) 15
TOKEN_ID (301) 20 21 22 26 41 62 64 65 66 67 68
TOKEN_INT_VALUE (302) 59
TOKEN_FLOAT_VALUE (303) 60
TOKEN_STRING_VALUE (304) 61


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
statement_list (52)
    on left: 2 3 4, on right: 1 4 30 31 33
statement (53)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16, on right: 3 4
parameter_list (54)
    on left: 17 18 19, on right: 18 64
parameter (55)
    on left: 20 21, on right: 17 18
function_call (56)
    on left: 22, on right: 11 12 15
argument_list (57)
    on left: 23 24 25, on right: 22 24
import_statement (58)
    on left: 26, on right: 10
switch_statement (59)
    on left: 27, on right: 8
case_list (60)
    on left: 28 29, on right: 27 29
case_statement (61)
    on left: 30 31, on right: 28 29
if_statement (62)
    on left: 32, on right: 7
block (63)
    on left: 33 34, on right: 12 14 15 32 36 37 64
else_if_list (64)
    on left: 35 36, on right: 32 36
else_statement (65)
    on left: 37 38, on right: 32
expression (66)
    on left: 39, on right: 16 23 24 27 30 32 36 41 63 67 68
declaration (67)
    on left: 40, on right: 5
assignment_expr (68)
    on left: 41 42, on right: 6 39
logical_expr (69)
    on left: 43 44 45, on right: 42 44 45
relational_expr (70)
    on left: 46 47 48 49 50, on right: 43 44 45 47 48 49 50
additive_expr (71)
    on left: 51 52 53, on right: 46 47 48 49 50 52 53
multiplicative_expr (72)
    on left: 54 55 56, on right: 51 52 53 55 56
unary_expr (73)
    on left: 57 58, on right: 54 55 56 57
primary_expr (74)
    on left: 59 60 61 62 63, on right: 58
function_declaration (75)
    on left: 64, on right: 9
variable_declaration (76)
    on left: 65 66 67 68, on right: 40


state 0

    0 $accept: . program $end

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]
    $default            reduce using rule 2 (statement_list)

    program               go to state 16
    statement_list        go to state 17
    statement             go to state 18
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 1

   32 if_statement: TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement

    TOKEN_LPAREN  shift, and go to state 34


state 2

   27 switch_statement: TOKEN_SWITCH . TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_LPAREN  shift, and go to state 35


state 3

   13 statement: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 36


state 4

   64 function_declaration: TOKEN_FUNCTION . TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block

    TOKEN_ID  shift, and go to state 37


state 5

   65 variable_declaration: TOKEN_INT . TOKEN_ID
   68                     | TOKEN_INT . TOKEN_ID TOKEN_ASSIGN expression

    TOKEN_ID  shift, and go to state 38


state 6

   66 variable_declaration: TOKEN_FLOAT . TOKEN_ID
   67                     | TOKEN_FLOAT . TOKEN_ID TOKEN_ASSIGN expression

    TOKEN_ID  shift, and go to state 39


state 7

   26 import_statement: TOKEN_IMPORT . TOKEN_ID

    TOKEN_ID  shift, and go to state 40


state 8

   16 statement: TOKEN_EXERT . expression TOKEN_SEMICOLON

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 42
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 9

   57 unary_expr: TOKEN_MINUS . unary_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    unary_expr    go to state 45
    primary_expr  go to state 31


state 10

   63 primary_expr: TOKEN_LPAREN . expression TOKEN_RPAREN

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 46
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 11

   33 block: TOKEN_LBRACE . statement_list TOKEN_RBRACE
   34      | TOKEN_LBRACE . TOKEN_RBRACE

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_RBRACE        shift, and go to state 47
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_RBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]

    statement_list        go to state 48
    statement             go to state 18
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 12

   22 function_call: TOKEN_ID . TOKEN_LPAREN argument_list TOKEN_RPAREN
   41 assignment_expr: TOKEN_ID . TOKEN_ASSIGN expression
   62 primary_expr: TOKEN_ID .

    TOKEN_ASSIGN  shift, and go to state 49
    TOKEN_LPAREN  shift, and go to state 50

    $default  reduce using rule 62 (primary_expr)


state 13

   59 primary_expr: TOKEN_INT_VALUE .

    $default  reduce using rule 59 (primary_expr)


state 14

   60 primary_expr: TOKEN_FLOAT_VALUE .

    $default  reduce using rule 60 (primary_expr)


state 15

   61 primary_expr: TOKEN_STRING_VALUE .

    $default  reduce using rule 61 (primary_expr)


state 16

    0 $accept: program . $end

    $end  shift, and go to state 51


state 17

    1 program: statement_list .
    4 statement_list: statement_list . statement

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    $default  reduce using rule 1 (program)

    statement             go to state 52
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 18

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


state 19

   11 statement: function_call . TOKEN_SEMICOLON
   12          | function_call . block
   15          | function_call . TOKEN_BLOCK_START block

    TOKEN_SEMICOLON    shift, and go to state 53
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_BLOCK_START  shift, and go to state 54

    block  go to state 55


state 20

   10 statement: import_statement . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 56


state 21

    8 statement: switch_statement .

    $default  reduce using rule 8 (statement)


state 22

    7 statement: if_statement .

    $default  reduce using rule 7 (statement)


state 23

   14 statement: block .

    $default  reduce using rule 14 (statement)


state 24

    5 statement: declaration . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 57


state 25

    6 statement: assignment_expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 58


state 26

   42 assignment_expr: logical_expr .
   44 logical_expr: logical_expr . TOKEN_AND relational_expr
   45             | logical_expr . TOKEN_OR relational_expr

    TOKEN_AND  shift, and go to state 59
    TOKEN_OR   shift, and go to state 60

    $default  reduce using rule 42 (assignment_expr)


state 27

   43 logical_expr: relational_expr .
   47 relational_expr: relational_expr . TOKEN_GT additive_expr
   48                | relational_expr . TOKEN_LT additive_expr
   49                | relational_expr . TOKEN_EQ additive_expr
   50                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 61
    TOKEN_NEQ  shift, and go to state 62
    TOKEN_GT   shift, and go to state 63
    TOKEN_LT   shift, and go to state 64

    $default  reduce using rule 43 (logical_expr)


state 28

   46 relational_expr: additive_expr .
   52 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   53              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 46 (relational_expr)


state 29

   51 additive_expr: multiplicative_expr .
   55 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   56                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 67
    TOKEN_DIV   shift, and go to state 68

    $default  reduce using rule 51 (additive_expr)


state 30

   54 multiplicative_expr: unary_expr .

    $default  reduce using rule 54 (multiplicative_expr)


state 31

   58 unary_expr: primary_expr .

    $default  reduce using rule 58 (unary_expr)


state 32

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 33

   40 declaration: variable_declaration .

    $default  reduce using rule 40 (declaration)


state 34

   32 if_statement: TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN block else_if_list else_statement

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 69
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 35

   27 switch_statement: TOKEN_SWITCH TOKEN_LPAREN . expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 70
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 36

   13 statement: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 13 (statement)


state 37

   64 function_declaration: TOKEN_FUNCTION TOKEN_ID . TOKEN_LPAREN parameter_list TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 71


state 38

   65 variable_declaration: TOKEN_INT TOKEN_ID .
   68                     | TOKEN_INT TOKEN_ID . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 72

    $default  reduce using rule 65 (variable_declaration)


state 39

   66 variable_declaration: TOKEN_FLOAT TOKEN_ID .
   67                     | TOKEN_FLOAT TOKEN_ID . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 73

    $default  reduce using rule 66 (variable_declaration)


state 40

   26 import_statement: TOKEN_IMPORT TOKEN_ID .

    $default  reduce using rule 26 (import_statement)


state 41

   41 assignment_expr: TOKEN_ID . TOKEN_ASSIGN expression
   62 primary_expr: TOKEN_ID .

    TOKEN_ASSIGN  shift, and go to state 49

    $default  reduce using rule 62 (primary_expr)


state 42

   16 statement: TOKEN_EXERT expression . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 74


state 43

   39 expression: assignment_expr .

    $default  reduce using rule 39 (expression)


state 44

   62 primary_expr: TOKEN_ID .

    $default  reduce using rule 62 (primary_expr)


state 45

   57 unary_expr: TOKEN_MINUS unary_expr .

    $default  reduce using rule 57 (unary_expr)


state 46

   63 primary_expr: TOKEN_LPAREN expression . TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 75


state 47

   34 block: TOKEN_LBRACE TOKEN_RBRACE .

    $default  reduce using rule 34 (block)


state 48

    4 statement_list: statement_list . statement
   33 block: TOKEN_LBRACE statement_list . TOKEN_RBRACE

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_RBRACE        shift, and go to state 76
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    statement             go to state 52
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 49

   41 assignment_expr: TOKEN_ID TOKEN_ASSIGN . expression

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 77
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 50

   22 function_call: TOKEN_ID TOKEN_LPAREN . argument_list TOKEN_RPAREN

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    $default  reduce using rule 25 (argument_list)

    argument_list        go to state 78
    expression           go to state 79
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 51

    0 $accept: program $end .

    $default  accept


state 52

    4 statement_list: statement_list statement .

    $default  reduce using rule 4 (statement_list)


state 53

   11 statement: function_call TOKEN_SEMICOLON .

    $default  reduce using rule 11 (statement)


state 54

   15 statement: function_call TOKEN_BLOCK_START . block

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 80


state 55

   12 statement: function_call block .

    $default  reduce using rule 12 (statement)


state 56

   10 statement: import_statement TOKEN_SEMICOLON .

    $default  reduce using rule 10 (statement)


state 57

    5 statement: declaration TOKEN_SEMICOLON .

    $default  reduce using rule 5 (statement)


state 58

    6 statement: assignment_expr TOKEN_SEMICOLON .

    $default  reduce using rule 6 (statement)


state 59

   44 logical_expr: logical_expr TOKEN_AND . relational_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    relational_expr      go to state 81
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 60

   45 logical_expr: logical_expr TOKEN_OR . relational_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    relational_expr      go to state 82
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 61

   49 relational_expr: relational_expr TOKEN_EQ . additive_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    additive_expr        go to state 83
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 62

   50 relational_expr: relational_expr TOKEN_NEQ . additive_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    additive_expr        go to state 84
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 63

   47 relational_expr: relational_expr TOKEN_GT . additive_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    additive_expr        go to state 85
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 64

   48 relational_expr: relational_expr TOKEN_LT . additive_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    additive_expr        go to state 86
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 65

   52 additive_expr: additive_expr TOKEN_PLUS . multiplicative_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    multiplicative_expr  go to state 87
    unary_expr           go to state 30
    primary_expr         go to state 31


state 66

   53 additive_expr: additive_expr TOKEN_MINUS . multiplicative_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    multiplicative_expr  go to state 88
    unary_expr           go to state 30
    primary_expr         go to state 31


state 67

   55 multiplicative_expr: multiplicative_expr TOKEN_MULT . unary_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    unary_expr    go to state 89
    primary_expr  go to state 31


state 68

   56 multiplicative_expr: multiplicative_expr TOKEN_DIV . unary_expr

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 44
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    unary_expr    go to state 90
    primary_expr  go to state 31


state 69

   32 if_statement: TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN block else_if_list else_statement

    TOKEN_RPAREN  shift, and go to state 91


state 70

   27 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression . TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_RPAREN  shift, and go to state 92


state 71

   64 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN . parameter_list TOKEN_RPAREN block

    TOKEN_INT    shift, and go to state 93
    TOKEN_FLOAT  shift, and go to state 94

    $default  reduce using rule 19 (parameter_list)

    parameter_list  go to state 95
    parameter       go to state 96


state 72

   68 variable_declaration: TOKEN_INT TOKEN_ID TOKEN_ASSIGN . expression

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 97
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 73

   67 variable_declaration: TOKEN_FLOAT TOKEN_ID TOKEN_ASSIGN . expression

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 98
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 74

   16 statement: TOKEN_EXERT expression TOKEN_SEMICOLON .

    $default  reduce using rule 16 (statement)


state 75

   63 primary_expr: TOKEN_LPAREN expression TOKEN_RPAREN .

    $default  reduce using rule 63 (primary_expr)


state 76

   33 block: TOKEN_LBRACE statement_list TOKEN_RBRACE .

    $default  reduce using rule 33 (block)


state 77

   41 assignment_expr: TOKEN_ID TOKEN_ASSIGN expression .

    $default  reduce using rule 41 (assignment_expr)


state 78

   22 function_call: TOKEN_ID TOKEN_LPAREN argument_list . TOKEN_RPAREN
   24 argument_list: argument_list . TOKEN_COMMA expression

    TOKEN_RPAREN  shift, and go to state 99
    TOKEN_COMMA   shift, and go to state 100


state 79

   23 argument_list: expression .

    $default  reduce using rule 23 (argument_list)


state 80

   15 statement: function_call TOKEN_BLOCK_START block .

    $default  reduce using rule 15 (statement)


state 81

   44 logical_expr: logical_expr TOKEN_AND relational_expr .
   47 relational_expr: relational_expr . TOKEN_GT additive_expr
   48                | relational_expr . TOKEN_LT additive_expr
   49                | relational_expr . TOKEN_EQ additive_expr
   50                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 61
    TOKEN_NEQ  shift, and go to state 62
    TOKEN_GT   shift, and go to state 63
    TOKEN_LT   shift, and go to state 64

    $default  reduce using rule 44 (logical_expr)


state 82

   45 logical_expr: logical_expr TOKEN_OR relational_expr .
   47 relational_expr: relational_expr . TOKEN_GT additive_expr
   48                | relational_expr . TOKEN_LT additive_expr
   49                | relational_expr . TOKEN_EQ additive_expr
   50                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 61
    TOKEN_NEQ  shift, and go to state 62
    TOKEN_GT   shift, and go to state 63
    TOKEN_LT   shift, and go to state 64

    $default  reduce using rule 45 (logical_expr)


state 83

   49 relational_expr: relational_expr TOKEN_EQ additive_expr .
   52 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   53              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 49 (relational_expr)


state 84

   50 relational_expr: relational_expr TOKEN_NEQ additive_expr .
   52 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   53              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 50 (relational_expr)


state 85

   47 relational_expr: relational_expr TOKEN_GT additive_expr .
   52 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   53              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 47 (relational_expr)


state 86

   48 relational_expr: relational_expr TOKEN_LT additive_expr .
   52 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   53              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 65
    TOKEN_MINUS  shift, and go to state 66

    $default  reduce using rule 48 (relational_expr)


state 87

   52 additive_expr: additive_expr TOKEN_PLUS multiplicative_expr .
   55 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   56                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 67
    TOKEN_DIV   shift, and go to state 68

    $default  reduce using rule 52 (additive_expr)


state 88

   53 additive_expr: additive_expr TOKEN_MINUS multiplicative_expr .
   55 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   56                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 67
    TOKEN_DIV   shift, and go to state 68

    $default  reduce using rule 53 (additive_expr)


state 89

   55 multiplicative_expr: multiplicative_expr TOKEN_MULT unary_expr .

    $default  reduce using rule 55 (multiplicative_expr)


state 90

   56 multiplicative_expr: multiplicative_expr TOKEN_DIV unary_expr .

    $default  reduce using rule 56 (multiplicative_expr)


state 91

   32 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . block else_if_list else_statement

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 101


state 92

   27 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN . TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_LBRACE  shift, and go to state 102


state 93

   20 parameter: TOKEN_INT . TOKEN_ID

    TOKEN_ID  shift, and go to state 103


state 94

   21 parameter: TOKEN_FLOAT . TOKEN_ID

    TOKEN_ID  shift, and go to state 104


state 95

   18 parameter_list: parameter_list . TOKEN_COMMA parameter
   64 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 105
    TOKEN_COMMA   shift, and go to state 106


state 96

   17 parameter_list: parameter .

    $default  reduce using rule 17 (parameter_list)


state 97

   68 variable_declaration: TOKEN_INT TOKEN_ID TOKEN_ASSIGN expression .

    $default  reduce using rule 68 (variable_declaration)


state 98

   67 variable_declaration: TOKEN_FLOAT TOKEN_ID TOKEN_ASSIGN expression .

    $default  reduce using rule 67 (variable_declaration)


state 99

   22 function_call: TOKEN_ID TOKEN_LPAREN argument_list TOKEN_RPAREN .

    $default  reduce using rule 22 (function_call)


state 100

   24 argument_list: argument_list TOKEN_COMMA . expression

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 107
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 101

   32 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block . else_if_list else_statement

    $default  reduce using rule 35 (else_if_list)

    else_if_list  go to state 108


state 102

   27 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE . case_list TOKEN_RBRACE

    TOKEN_CASE     shift, and go to state 109
    TOKEN_DEFAULT  shift, and go to state 110

    case_list       go to state 111
    case_statement  go to state 112


state 103

   20 parameter: TOKEN_INT TOKEN_ID .

    $default  reduce using rule 20 (parameter)


state 104

   21 parameter: TOKEN_FLOAT TOKEN_ID .

    $default  reduce using rule 21 (parameter)


state 105

   64 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 113


state 106

   18 parameter_list: parameter_list TOKEN_COMMA . parameter

    TOKEN_INT    shift, and go to state 93
    TOKEN_FLOAT  shift, and go to state 94

    parameter  go to state 114


state 107

   24 argument_list: argument_list TOKEN_COMMA expression .

    $default  reduce using rule 24 (argument_list)


state 108

   32 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list . else_statement
   36 else_if_list: else_if_list . TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block

    TOKEN_ELSE  shift, and go to state 115
    TOKEN_ELIF  shift, and go to state 116

    $default  reduce using rule 38 (else_statement)

    else_statement  go to state 117


state 109

   30 case_statement: TOKEN_CASE . expression TOKEN_COLON statement_list

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 118
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 110

   31 case_statement: TOKEN_DEFAULT . TOKEN_COLON statement_list

    TOKEN_COLON  shift, and go to state 119


state 111

   27 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list . TOKEN_RBRACE
   29 case_list: case_list . case_statement

    TOKEN_CASE     shift, and go to state 109
    TOKEN_DEFAULT  shift, and go to state 110
    TOKEN_RBRACE   shift, and go to state 120

    case_statement  go to state 121


state 112

   28 case_list: case_statement .

    $default  reduce using rule 28 (case_list)


state 113

   64 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block .

    $default  reduce using rule 64 (function_declaration)


state 114

   18 parameter_list: parameter_list TOKEN_COMMA parameter .

    $default  reduce using rule 18 (parameter_list)


state 115

   37 else_statement: TOKEN_ELSE . block

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 122


state 116

   36 else_if_list: else_if_list TOKEN_ELIF . TOKEN_LPAREN expression TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 123


state 117

   32 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement .

    $default  reduce using rule 32 (if_statement)


state 118

   30 case_statement: TOKEN_CASE expression . TOKEN_COLON statement_list

    TOKEN_COLON  shift, and go to state 124


state 119

   31 case_statement: TOKEN_DEFAULT TOKEN_COLON . statement_list

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]
    $default            reduce using rule 2 (statement_list)

    statement_list        go to state 125
    statement             go to state 18
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 120

   27 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE .

    $default  reduce using rule 27 (switch_statement)


state 121

   29 case_list: case_list case_statement .

    $default  reduce using rule 29 (case_list)


state 122

   37 else_statement: TOKEN_ELSE block .

    $default  reduce using rule 37 (else_statement)


state 123

   36 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN . expression TOKEN_RPAREN block

    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_ID            shift, and go to state 41
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    expression           go to state 126
    assignment_expr      go to state 43
    logical_expr         go to state 26
    relational_expr      go to state 27
    additive_expr        go to state 28
    multiplicative_expr  go to state 29
    unary_expr           go to state 30
    primary_expr         go to state 31


state 124

   30 case_statement: TOKEN_CASE expression TOKEN_COLON . statement_list

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]
    $default            reduce using rule 2 (statement_list)

    statement_list        go to state 127
    statement             go to state 18
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 125

    4 statement_list: statement_list . statement
   31 case_statement: TOKEN_DEFAULT TOKEN_COLON statement_list .

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    $default  reduce using rule 31 (case_statement)

    statement             go to state 52
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 126

   36 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 128


state 127

    4 statement_list: statement_list . statement
   30 case_statement: TOKEN_CASE expression TOKEN_COLON statement_list .

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_INT           shift, and go to state 5
    TOKEN_FLOAT         shift, and go to state 6
    TOKEN_IMPORT        shift, and go to state 7
    TOKEN_EXERT         shift, and go to state 8
    TOKEN_MINUS         shift, and go to state 9
    TOKEN_LPAREN        shift, and go to state 10
    TOKEN_LBRACE        shift, and go to state 11
    TOKEN_ID            shift, and go to state 12
    TOKEN_INT_VALUE     shift, and go to state 13
    TOKEN_FLOAT_VALUE   shift, and go to state 14
    TOKEN_STRING_VALUE  shift, and go to state 15

    $default  reduce using rule 30 (case_statement)

    statement             go to state 52
    function_call         go to state 19
    import_statement      go to state 20
    switch_statement      go to state 21
    if_statement          go to state 22
    block                 go to state 23
    declaration           go to state 24
    assignment_expr       go to state 25
    logical_expr          go to state 26
    relational_expr       go to state 27
    additive_expr         go to state 28
    multiplicative_expr   go to state 29
    unary_expr            go to state 30
    primary_expr          go to state 31
    function_declaration  go to state 32
    variable_declaration  go to state 33


state 128

   36 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 129


state 129

   36 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block .

    $default  reduce using rule 36 (else_if_list)
