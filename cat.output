Terminals unused in grammar

   TOKEN_INSERT
   TOKEN_INCREMENT
   TOKEN_DECREMENT
   TOKEN_NOT
   TOKEN_COMP
   TOKEN_LOGICAL_NOT
   TOKEN_GE
   TOKEN_LE
   TOKEN_PLUS_ASSIGN
   TOKEN_MINUS_ASSIGN
   TOKEN_MULT_ASSIGN
   TOKEN_DIV_ASSIGN


State 0 conflicts: 17 shift/reduce
State 13 conflicts: 18 shift/reduce
State 132 conflicts: 17 shift/reduce
State 138 conflicts: 17 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: /* empty */
    3               | statement
    4               | statement_list statement

    5 statement: declaration TOKEN_SEMICOLON
    6          | assignment_expr TOKEN_SEMICOLON
    7          | if_statement
    8          | switch_statement
    9          | function_declaration
   10          | import_statement TOKEN_SEMICOLON
   11          | function_call TOKEN_SEMICOLON
   12          | function_call block
   13          | TOKEN_BREAK TOKEN_SEMICOLON
   14          | block
   15          | function_call TOKEN_BLOCK_START block
   16          | TOKEN_EXERT expression TOKEN_SEMICOLON
   17          | for_loop
   18          | while_loop

   19 parameter_list: parameter
   20               | parameter_list TOKEN_COMMA parameter
   21               | /* empty */

   22 parameter: TOKEN_INT TOKEN_ID
   23          | TOKEN_FLOAT TOKEN_ID

   24 function_call: TOKEN_ID TOKEN_LPAREN argument_list TOKEN_RPAREN

   25 argument_list: expression
   26              | argument_list TOKEN_COMMA expression
   27              | /* empty */

   28 import_statement: TOKEN_IMPORT TOKEN_ID

   29 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

   30 case_list: case_statement
   31          | case_list case_statement

   32 case_statement: TOKEN_CASE expression TOKEN_COLON statement_list
   33               | TOKEN_DEFAULT TOKEN_COLON statement_list

   34 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement

   35 block: TOKEN_LBRACE statement_list TOKEN_RBRACE
   36      | TOKEN_LBRACE TOKEN_RBRACE

   37 else_if_list: /* empty */
   38             | else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block

   39 else_statement: TOKEN_ELSE block
   40               | /* empty */

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SEMICOLON expression TOKEN_SEMICOLON expression TOKEN_RPAREN block

   42 while_loop: TOKEN_WHILE TOKEN_LPAREN expression TOKEN_RPAREN block

   43 expression: assignment_expr

   44 declaration: variable_declaration

   45 assignment_expr: TOKEN_ID TOKEN_ASSIGN expression
   46                | logical_expr

   47 logical_expr: relational_expr
   48             | logical_expr TOKEN_AND relational_expr
   49             | logical_expr TOKEN_OR relational_expr

   50 relational_expr: additive_expr
   51                | relational_expr TOKEN_GT additive_expr
   52                | relational_expr TOKEN_LT additive_expr
   53                | relational_expr TOKEN_EQ additive_expr
   54                | relational_expr TOKEN_NEQ additive_expr

   55 additive_expr: multiplicative_expr
   56              | additive_expr TOKEN_PLUS multiplicative_expr
   57              | additive_expr TOKEN_MINUS multiplicative_expr

   58 multiplicative_expr: unary_expr
   59                    | multiplicative_expr TOKEN_MULT unary_expr
   60                    | multiplicative_expr TOKEN_DIV unary_expr

   61 unary_expr: TOKEN_MINUS unary_expr
   62           | primary_expr

   63 primary_expr: TOKEN_INT_VALUE
   64             | TOKEN_FLOAT_VALUE
   65             | TOKEN_STRING_VALUE
   66             | TOKEN_ID
   67             | TOKEN_LPAREN expression TOKEN_RPAREN

   68 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block

   69 variable_declaration: TOKEN_INT TOKEN_ID
   70                     | TOKEN_FLOAT TOKEN_ID
   71                     | TOKEN_FLOAT TOKEN_ID TOKEN_ASSIGN expression
   72                     | TOKEN_INT TOKEN_ID TOKEN_ASSIGN expression


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_IF (258) 34
TOKEN_ELSE (259) 39
TOKEN_ELIF (260) 38
TOKEN_SWITCH (261) 29
TOKEN_CASE (262) 32
TOKEN_DEFAULT (263) 33
TOKEN_BREAK (264) 13
TOKEN_FUNCTION (265) 68
TOKEN_FOR (266) 41
TOKEN_WHILE (267) 42
TOKEN_INT (268) 22 69 72
TOKEN_FLOAT (269) 23 70 71
TOKEN_IMPORT (270) 28
TOKEN_INSERT (271)
TOKEN_EXERT (272) 16
TOKEN_PLUS (273) 56
TOKEN_MINUS (274) 57 61
TOKEN_MULT (275) 59
TOKEN_DIV (276) 60
TOKEN_INCREMENT (277)
TOKEN_DECREMENT (278)
TOKEN_NOT (279)
TOKEN_COMP (280)
TOKEN_AND (281) 48
TOKEN_OR (282) 49
TOKEN_LOGICAL_NOT (283)
TOKEN_EQ (284) 53
TOKEN_NEQ (285) 54
TOKEN_GT (286) 51
TOKEN_LT (287) 52
TOKEN_GE (288)
TOKEN_LE (289)
TOKEN_ASSIGN (290) 45 71 72
TOKEN_PLUS_ASSIGN (291)
TOKEN_MINUS_ASSIGN (292)
TOKEN_MULT_ASSIGN (293)
TOKEN_DIV_ASSIGN (294)
TOKEN_SEMICOLON (295) 5 6 10 11 13 16 41
TOKEN_COLON (296) 32 33
TOKEN_LPAREN (297) 24 29 34 38 41 42 67 68
TOKEN_RPAREN (298) 24 29 34 38 41 42 67 68
TOKEN_LBRACE (299) 29 35 36
TOKEN_RBRACE (300) 29 35 36
TOKEN_COMMA (301) 20 26
TOKEN_BLOCK_START (302) 15
TOKEN_ID (303) 22 23 24 28 45 66 68 69 70 71 72
TOKEN_INT_VALUE (304) 63
TOKEN_FLOAT_VALUE (305) 64
TOKEN_STRING_VALUE (306) 65


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
statement_list (54)
    on left: 2 3 4, on right: 1 4 32 33 35
statement (55)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 3 4
parameter_list (56)
    on left: 19 20 21, on right: 20 68
parameter (57)
    on left: 22 23, on right: 19 20
function_call (58)
    on left: 24, on right: 11 12 15
argument_list (59)
    on left: 25 26 27, on right: 24 26
import_statement (60)
    on left: 28, on right: 10
switch_statement (61)
    on left: 29, on right: 8
case_list (62)
    on left: 30 31, on right: 29 31
case_statement (63)
    on left: 32 33, on right: 30 31
if_statement (64)
    on left: 34, on right: 7
block (65)
    on left: 35 36, on right: 12 14 15 34 38 39 41 42 68
else_if_list (66)
    on left: 37 38, on right: 34 38
else_statement (67)
    on left: 39 40, on right: 34
for_loop (68)
    on left: 41, on right: 17
while_loop (69)
    on left: 42, on right: 18
expression (70)
    on left: 43, on right: 16 25 26 29 32 34 38 41 42 45 67 71 72
declaration (71)
    on left: 44, on right: 5
assignment_expr (72)
    on left: 45 46, on right: 6 43
logical_expr (73)
    on left: 47 48 49, on right: 46 48 49
relational_expr (74)
    on left: 50 51 52 53 54, on right: 47 48 49 51 52 53 54
additive_expr (75)
    on left: 55 56 57, on right: 50 51 52 53 54 56 57
multiplicative_expr (76)
    on left: 58 59 60, on right: 55 56 57 59 60
unary_expr (77)
    on left: 61 62, on right: 58 59 60 61
primary_expr (78)
    on left: 63 64 65 66 67, on right: 62
function_declaration (79)
    on left: 68, on right: 9
variable_declaration (80)
    on left: 69 70 71 72, on right: 44


state 0

    0 $accept: . program $end

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_FOR           [reduce using rule 2 (statement_list)]
    TOKEN_WHILE         [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]
    $default            reduce using rule 2 (statement_list)

    program               go to state 18
    statement_list        go to state 19
    statement             go to state 20
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 1

   34 if_statement: TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement

    TOKEN_LPAREN  shift, and go to state 38


state 2

   29 switch_statement: TOKEN_SWITCH . TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_LPAREN  shift, and go to state 39


state 3

   13 statement: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 40


state 4

   68 function_declaration: TOKEN_FUNCTION . TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block

    TOKEN_ID  shift, and go to state 41


state 5

   41 for_loop: TOKEN_FOR . TOKEN_LPAREN expression TOKEN_SEMICOLON expression TOKEN_SEMICOLON expression TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 42


state 6

   42 while_loop: TOKEN_WHILE . TOKEN_LPAREN expression TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 43


state 7

   69 variable_declaration: TOKEN_INT . TOKEN_ID
   72                     | TOKEN_INT . TOKEN_ID TOKEN_ASSIGN expression

    TOKEN_ID  shift, and go to state 44


state 8

   70 variable_declaration: TOKEN_FLOAT . TOKEN_ID
   71                     | TOKEN_FLOAT . TOKEN_ID TOKEN_ASSIGN expression

    TOKEN_ID  shift, and go to state 45


state 9

   28 import_statement: TOKEN_IMPORT . TOKEN_ID

    TOKEN_ID  shift, and go to state 46


state 10

   16 statement: TOKEN_EXERT . expression TOKEN_SEMICOLON

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 48
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 11

   61 unary_expr: TOKEN_MINUS . unary_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    unary_expr    go to state 51
    primary_expr  go to state 35


state 12

   67 primary_expr: TOKEN_LPAREN . expression TOKEN_RPAREN

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 52
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 13

   35 block: TOKEN_LBRACE . statement_list TOKEN_RBRACE
   36      | TOKEN_LBRACE . TOKEN_RBRACE

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_RBRACE        shift, and go to state 53
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_FOR           [reduce using rule 2 (statement_list)]
    TOKEN_WHILE         [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_RBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]

    statement_list        go to state 54
    statement             go to state 20
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 14

   24 function_call: TOKEN_ID . TOKEN_LPAREN argument_list TOKEN_RPAREN
   45 assignment_expr: TOKEN_ID . TOKEN_ASSIGN expression
   66 primary_expr: TOKEN_ID .

    TOKEN_ASSIGN  shift, and go to state 55
    TOKEN_LPAREN  shift, and go to state 56

    $default  reduce using rule 66 (primary_expr)


state 15

   63 primary_expr: TOKEN_INT_VALUE .

    $default  reduce using rule 63 (primary_expr)


state 16

   64 primary_expr: TOKEN_FLOAT_VALUE .

    $default  reduce using rule 64 (primary_expr)


state 17

   65 primary_expr: TOKEN_STRING_VALUE .

    $default  reduce using rule 65 (primary_expr)


state 18

    0 $accept: program . $end

    $end  shift, and go to state 57


state 19

    1 program: statement_list .
    4 statement_list: statement_list . statement

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    $default  reduce using rule 1 (program)

    statement             go to state 58
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 20

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


state 21

   11 statement: function_call . TOKEN_SEMICOLON
   12          | function_call . block
   15          | function_call . TOKEN_BLOCK_START block

    TOKEN_SEMICOLON    shift, and go to state 59
    TOKEN_LBRACE       shift, and go to state 13
    TOKEN_BLOCK_START  shift, and go to state 60

    block  go to state 61


state 22

   10 statement: import_statement . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 62


state 23

    8 statement: switch_statement .

    $default  reduce using rule 8 (statement)


state 24

    7 statement: if_statement .

    $default  reduce using rule 7 (statement)


state 25

   14 statement: block .

    $default  reduce using rule 14 (statement)


state 26

   17 statement: for_loop .

    $default  reduce using rule 17 (statement)


state 27

   18 statement: while_loop .

    $default  reduce using rule 18 (statement)


state 28

    5 statement: declaration . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 63


state 29

    6 statement: assignment_expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 64


state 30

   46 assignment_expr: logical_expr .
   48 logical_expr: logical_expr . TOKEN_AND relational_expr
   49             | logical_expr . TOKEN_OR relational_expr

    TOKEN_AND  shift, and go to state 65
    TOKEN_OR   shift, and go to state 66

    $default  reduce using rule 46 (assignment_expr)


state 31

   47 logical_expr: relational_expr .
   51 relational_expr: relational_expr . TOKEN_GT additive_expr
   52                | relational_expr . TOKEN_LT additive_expr
   53                | relational_expr . TOKEN_EQ additive_expr
   54                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 67
    TOKEN_NEQ  shift, and go to state 68
    TOKEN_GT   shift, and go to state 69
    TOKEN_LT   shift, and go to state 70

    $default  reduce using rule 47 (logical_expr)


state 32

   50 relational_expr: additive_expr .
   56 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   57              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 71
    TOKEN_MINUS  shift, and go to state 72

    $default  reduce using rule 50 (relational_expr)


state 33

   55 additive_expr: multiplicative_expr .
   59 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   60                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 73
    TOKEN_DIV   shift, and go to state 74

    $default  reduce using rule 55 (additive_expr)


state 34

   58 multiplicative_expr: unary_expr .

    $default  reduce using rule 58 (multiplicative_expr)


state 35

   62 unary_expr: primary_expr .

    $default  reduce using rule 62 (unary_expr)


state 36

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 37

   44 declaration: variable_declaration .

    $default  reduce using rule 44 (declaration)


state 38

   34 if_statement: TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN block else_if_list else_statement

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 75
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 39

   29 switch_statement: TOKEN_SWITCH TOKEN_LPAREN . expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 76
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 40

   13 statement: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 13 (statement)


state 41

   68 function_declaration: TOKEN_FUNCTION TOKEN_ID . TOKEN_LPAREN parameter_list TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 77


state 42

   41 for_loop: TOKEN_FOR TOKEN_LPAREN . expression TOKEN_SEMICOLON expression TOKEN_SEMICOLON expression TOKEN_RPAREN block

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 78
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 43

   42 while_loop: TOKEN_WHILE TOKEN_LPAREN . expression TOKEN_RPAREN block

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 79
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 44

   69 variable_declaration: TOKEN_INT TOKEN_ID .
   72                     | TOKEN_INT TOKEN_ID . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 80

    $default  reduce using rule 69 (variable_declaration)


state 45

   70 variable_declaration: TOKEN_FLOAT TOKEN_ID .
   71                     | TOKEN_FLOAT TOKEN_ID . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 81

    $default  reduce using rule 70 (variable_declaration)


state 46

   28 import_statement: TOKEN_IMPORT TOKEN_ID .

    $default  reduce using rule 28 (import_statement)


state 47

   45 assignment_expr: TOKEN_ID . TOKEN_ASSIGN expression
   66 primary_expr: TOKEN_ID .

    TOKEN_ASSIGN  shift, and go to state 55

    $default  reduce using rule 66 (primary_expr)


state 48

   16 statement: TOKEN_EXERT expression . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 82


state 49

   43 expression: assignment_expr .

    $default  reduce using rule 43 (expression)


state 50

   66 primary_expr: TOKEN_ID .

    $default  reduce using rule 66 (primary_expr)


state 51

   61 unary_expr: TOKEN_MINUS unary_expr .

    $default  reduce using rule 61 (unary_expr)


state 52

   67 primary_expr: TOKEN_LPAREN expression . TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 83


state 53

   36 block: TOKEN_LBRACE TOKEN_RBRACE .

    $default  reduce using rule 36 (block)


state 54

    4 statement_list: statement_list . statement
   35 block: TOKEN_LBRACE statement_list . TOKEN_RBRACE

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_RBRACE        shift, and go to state 84
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    statement             go to state 58
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 55

   45 assignment_expr: TOKEN_ID TOKEN_ASSIGN . expression

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 85
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 56

   24 function_call: TOKEN_ID TOKEN_LPAREN . argument_list TOKEN_RPAREN

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    $default  reduce using rule 27 (argument_list)

    argument_list        go to state 86
    expression           go to state 87
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 57

    0 $accept: program $end .

    $default  accept


state 58

    4 statement_list: statement_list statement .

    $default  reduce using rule 4 (statement_list)


state 59

   11 statement: function_call TOKEN_SEMICOLON .

    $default  reduce using rule 11 (statement)


state 60

   15 statement: function_call TOKEN_BLOCK_START . block

    TOKEN_LBRACE  shift, and go to state 13

    block  go to state 88


state 61

   12 statement: function_call block .

    $default  reduce using rule 12 (statement)


state 62

   10 statement: import_statement TOKEN_SEMICOLON .

    $default  reduce using rule 10 (statement)


state 63

    5 statement: declaration TOKEN_SEMICOLON .

    $default  reduce using rule 5 (statement)


state 64

    6 statement: assignment_expr TOKEN_SEMICOLON .

    $default  reduce using rule 6 (statement)


state 65

   48 logical_expr: logical_expr TOKEN_AND . relational_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    relational_expr      go to state 89
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 66

   49 logical_expr: logical_expr TOKEN_OR . relational_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    relational_expr      go to state 90
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 67

   53 relational_expr: relational_expr TOKEN_EQ . additive_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    additive_expr        go to state 91
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 68

   54 relational_expr: relational_expr TOKEN_NEQ . additive_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    additive_expr        go to state 92
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 69

   51 relational_expr: relational_expr TOKEN_GT . additive_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    additive_expr        go to state 93
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 70

   52 relational_expr: relational_expr TOKEN_LT . additive_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    additive_expr        go to state 94
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 71

   56 additive_expr: additive_expr TOKEN_PLUS . multiplicative_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    multiplicative_expr  go to state 95
    unary_expr           go to state 34
    primary_expr         go to state 35


state 72

   57 additive_expr: additive_expr TOKEN_MINUS . multiplicative_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    multiplicative_expr  go to state 96
    unary_expr           go to state 34
    primary_expr         go to state 35


state 73

   59 multiplicative_expr: multiplicative_expr TOKEN_MULT . unary_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    unary_expr    go to state 97
    primary_expr  go to state 35


state 74

   60 multiplicative_expr: multiplicative_expr TOKEN_DIV . unary_expr

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 50
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    unary_expr    go to state 98
    primary_expr  go to state 35


state 75

   34 if_statement: TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN block else_if_list else_statement

    TOKEN_RPAREN  shift, and go to state 99


state 76

   29 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression . TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_RPAREN  shift, and go to state 100


state 77

   68 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN . parameter_list TOKEN_RPAREN block

    TOKEN_INT    shift, and go to state 101
    TOKEN_FLOAT  shift, and go to state 102

    $default  reduce using rule 21 (parameter_list)

    parameter_list  go to state 103
    parameter       go to state 104


state 78

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression . TOKEN_SEMICOLON expression TOKEN_SEMICOLON expression TOKEN_RPAREN block

    TOKEN_SEMICOLON  shift, and go to state 105


state 79

   42 while_loop: TOKEN_WHILE TOKEN_LPAREN expression . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 106


state 80

   72 variable_declaration: TOKEN_INT TOKEN_ID TOKEN_ASSIGN . expression

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 107
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 81

   71 variable_declaration: TOKEN_FLOAT TOKEN_ID TOKEN_ASSIGN . expression

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 108
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 82

   16 statement: TOKEN_EXERT expression TOKEN_SEMICOLON .

    $default  reduce using rule 16 (statement)


state 83

   67 primary_expr: TOKEN_LPAREN expression TOKEN_RPAREN .

    $default  reduce using rule 67 (primary_expr)


state 84

   35 block: TOKEN_LBRACE statement_list TOKEN_RBRACE .

    $default  reduce using rule 35 (block)


state 85

   45 assignment_expr: TOKEN_ID TOKEN_ASSIGN expression .

    $default  reduce using rule 45 (assignment_expr)


state 86

   24 function_call: TOKEN_ID TOKEN_LPAREN argument_list . TOKEN_RPAREN
   26 argument_list: argument_list . TOKEN_COMMA expression

    TOKEN_RPAREN  shift, and go to state 109
    TOKEN_COMMA   shift, and go to state 110


state 87

   25 argument_list: expression .

    $default  reduce using rule 25 (argument_list)


state 88

   15 statement: function_call TOKEN_BLOCK_START block .

    $default  reduce using rule 15 (statement)


state 89

   48 logical_expr: logical_expr TOKEN_AND relational_expr .
   51 relational_expr: relational_expr . TOKEN_GT additive_expr
   52                | relational_expr . TOKEN_LT additive_expr
   53                | relational_expr . TOKEN_EQ additive_expr
   54                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 67
    TOKEN_NEQ  shift, and go to state 68
    TOKEN_GT   shift, and go to state 69
    TOKEN_LT   shift, and go to state 70

    $default  reduce using rule 48 (logical_expr)


state 90

   49 logical_expr: logical_expr TOKEN_OR relational_expr .
   51 relational_expr: relational_expr . TOKEN_GT additive_expr
   52                | relational_expr . TOKEN_LT additive_expr
   53                | relational_expr . TOKEN_EQ additive_expr
   54                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 67
    TOKEN_NEQ  shift, and go to state 68
    TOKEN_GT   shift, and go to state 69
    TOKEN_LT   shift, and go to state 70

    $default  reduce using rule 49 (logical_expr)


state 91

   53 relational_expr: relational_expr TOKEN_EQ additive_expr .
   56 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   57              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 71
    TOKEN_MINUS  shift, and go to state 72

    $default  reduce using rule 53 (relational_expr)


state 92

   54 relational_expr: relational_expr TOKEN_NEQ additive_expr .
   56 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   57              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 71
    TOKEN_MINUS  shift, and go to state 72

    $default  reduce using rule 54 (relational_expr)


state 93

   51 relational_expr: relational_expr TOKEN_GT additive_expr .
   56 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   57              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 71
    TOKEN_MINUS  shift, and go to state 72

    $default  reduce using rule 51 (relational_expr)


state 94

   52 relational_expr: relational_expr TOKEN_LT additive_expr .
   56 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   57              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 71
    TOKEN_MINUS  shift, and go to state 72

    $default  reduce using rule 52 (relational_expr)


state 95

   56 additive_expr: additive_expr TOKEN_PLUS multiplicative_expr .
   59 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   60                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 73
    TOKEN_DIV   shift, and go to state 74

    $default  reduce using rule 56 (additive_expr)


state 96

   57 additive_expr: additive_expr TOKEN_MINUS multiplicative_expr .
   59 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   60                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 73
    TOKEN_DIV   shift, and go to state 74

    $default  reduce using rule 57 (additive_expr)


state 97

   59 multiplicative_expr: multiplicative_expr TOKEN_MULT unary_expr .

    $default  reduce using rule 59 (multiplicative_expr)


state 98

   60 multiplicative_expr: multiplicative_expr TOKEN_DIV unary_expr .

    $default  reduce using rule 60 (multiplicative_expr)


state 99

   34 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . block else_if_list else_statement

    TOKEN_LBRACE  shift, and go to state 13

    block  go to state 111


state 100

   29 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN . TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_LBRACE  shift, and go to state 112


state 101

   22 parameter: TOKEN_INT . TOKEN_ID

    TOKEN_ID  shift, and go to state 113


state 102

   23 parameter: TOKEN_FLOAT . TOKEN_ID

    TOKEN_ID  shift, and go to state 114


state 103

   20 parameter_list: parameter_list . TOKEN_COMMA parameter
   68 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 115
    TOKEN_COMMA   shift, and go to state 116


state 104

   19 parameter_list: parameter .

    $default  reduce using rule 19 (parameter_list)


state 105

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SEMICOLON . expression TOKEN_SEMICOLON expression TOKEN_RPAREN block

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 117
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 106

   42 while_loop: TOKEN_WHILE TOKEN_LPAREN expression TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 13

    block  go to state 118


state 107

   72 variable_declaration: TOKEN_INT TOKEN_ID TOKEN_ASSIGN expression .

    $default  reduce using rule 72 (variable_declaration)


state 108

   71 variable_declaration: TOKEN_FLOAT TOKEN_ID TOKEN_ASSIGN expression .

    $default  reduce using rule 71 (variable_declaration)


state 109

   24 function_call: TOKEN_ID TOKEN_LPAREN argument_list TOKEN_RPAREN .

    $default  reduce using rule 24 (function_call)


state 110

   26 argument_list: argument_list TOKEN_COMMA . expression

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 119
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 111

   34 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block . else_if_list else_statement

    $default  reduce using rule 37 (else_if_list)

    else_if_list  go to state 120


state 112

   29 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE . case_list TOKEN_RBRACE

    TOKEN_CASE     shift, and go to state 121
    TOKEN_DEFAULT  shift, and go to state 122

    case_list       go to state 123
    case_statement  go to state 124


state 113

   22 parameter: TOKEN_INT TOKEN_ID .

    $default  reduce using rule 22 (parameter)


state 114

   23 parameter: TOKEN_FLOAT TOKEN_ID .

    $default  reduce using rule 23 (parameter)


state 115

   68 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 13

    block  go to state 125


state 116

   20 parameter_list: parameter_list TOKEN_COMMA . parameter

    TOKEN_INT    shift, and go to state 101
    TOKEN_FLOAT  shift, and go to state 102

    parameter  go to state 126


state 117

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SEMICOLON expression . TOKEN_SEMICOLON expression TOKEN_RPAREN block

    TOKEN_SEMICOLON  shift, and go to state 127


state 118

   42 while_loop: TOKEN_WHILE TOKEN_LPAREN expression TOKEN_RPAREN block .

    $default  reduce using rule 42 (while_loop)


state 119

   26 argument_list: argument_list TOKEN_COMMA expression .

    $default  reduce using rule 26 (argument_list)


state 120

   34 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list . else_statement
   38 else_if_list: else_if_list . TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block

    TOKEN_ELSE  shift, and go to state 128
    TOKEN_ELIF  shift, and go to state 129

    $default  reduce using rule 40 (else_statement)

    else_statement  go to state 130


state 121

   32 case_statement: TOKEN_CASE . expression TOKEN_COLON statement_list

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 131
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 122

   33 case_statement: TOKEN_DEFAULT . TOKEN_COLON statement_list

    TOKEN_COLON  shift, and go to state 132


state 123

   29 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list . TOKEN_RBRACE
   31 case_list: case_list . case_statement

    TOKEN_CASE     shift, and go to state 121
    TOKEN_DEFAULT  shift, and go to state 122
    TOKEN_RBRACE   shift, and go to state 133

    case_statement  go to state 134


state 124

   30 case_list: case_statement .

    $default  reduce using rule 30 (case_list)


state 125

   68 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block .

    $default  reduce using rule 68 (function_declaration)


state 126

   20 parameter_list: parameter_list TOKEN_COMMA parameter .

    $default  reduce using rule 20 (parameter_list)


state 127

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SEMICOLON expression TOKEN_SEMICOLON . expression TOKEN_RPAREN block

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 135
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 128

   39 else_statement: TOKEN_ELSE . block

    TOKEN_LBRACE  shift, and go to state 13

    block  go to state 136


state 129

   38 else_if_list: else_if_list TOKEN_ELIF . TOKEN_LPAREN expression TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 137


state 130

   34 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement .

    $default  reduce using rule 34 (if_statement)


state 131

   32 case_statement: TOKEN_CASE expression . TOKEN_COLON statement_list

    TOKEN_COLON  shift, and go to state 138


state 132

   33 case_statement: TOKEN_DEFAULT TOKEN_COLON . statement_list

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_FOR           [reduce using rule 2 (statement_list)]
    TOKEN_WHILE         [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]
    $default            reduce using rule 2 (statement_list)

    statement_list        go to state 139
    statement             go to state 20
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 133

   29 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE .

    $default  reduce using rule 29 (switch_statement)


state 134

   31 case_list: case_list case_statement .

    $default  reduce using rule 31 (case_list)


state 135

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SEMICOLON expression TOKEN_SEMICOLON expression . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 140


state 136

   39 else_statement: TOKEN_ELSE block .

    $default  reduce using rule 39 (else_statement)


state 137

   38 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN . expression TOKEN_RPAREN block

    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_ID            shift, and go to state 47
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    expression           go to state 141
    assignment_expr      go to state 49
    logical_expr         go to state 30
    relational_expr      go to state 31
    additive_expr        go to state 32
    multiplicative_expr  go to state 33
    unary_expr           go to state 34
    primary_expr         go to state 35


state 138

   32 case_statement: TOKEN_CASE expression TOKEN_COLON . statement_list

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    TOKEN_IF            [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH        [reduce using rule 2 (statement_list)]
    TOKEN_BREAK         [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION      [reduce using rule 2 (statement_list)]
    TOKEN_FOR           [reduce using rule 2 (statement_list)]
    TOKEN_WHILE         [reduce using rule 2 (statement_list)]
    TOKEN_INT           [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT         [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT        [reduce using rule 2 (statement_list)]
    TOKEN_EXERT         [reduce using rule 2 (statement_list)]
    TOKEN_MINUS         [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN        [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE        [reduce using rule 2 (statement_list)]
    TOKEN_ID            [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE     [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE   [reduce using rule 2 (statement_list)]
    TOKEN_STRING_VALUE  [reduce using rule 2 (statement_list)]
    $default            reduce using rule 2 (statement_list)

    statement_list        go to state 142
    statement             go to state 20
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 139

    4 statement_list: statement_list . statement
   33 case_statement: TOKEN_DEFAULT TOKEN_COLON statement_list .

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    $default  reduce using rule 33 (case_statement)

    statement             go to state 58
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 140

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SEMICOLON expression TOKEN_SEMICOLON expression TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 13

    block  go to state 143


state 141

   38 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 144


state 142

    4 statement_list: statement_list . statement
   32 case_statement: TOKEN_CASE expression TOKEN_COLON statement_list .

    TOKEN_IF            shift, and go to state 1
    TOKEN_SWITCH        shift, and go to state 2
    TOKEN_BREAK         shift, and go to state 3
    TOKEN_FUNCTION      shift, and go to state 4
    TOKEN_FOR           shift, and go to state 5
    TOKEN_WHILE         shift, and go to state 6
    TOKEN_INT           shift, and go to state 7
    TOKEN_FLOAT         shift, and go to state 8
    TOKEN_IMPORT        shift, and go to state 9
    TOKEN_EXERT         shift, and go to state 10
    TOKEN_MINUS         shift, and go to state 11
    TOKEN_LPAREN        shift, and go to state 12
    TOKEN_LBRACE        shift, and go to state 13
    TOKEN_ID            shift, and go to state 14
    TOKEN_INT_VALUE     shift, and go to state 15
    TOKEN_FLOAT_VALUE   shift, and go to state 16
    TOKEN_STRING_VALUE  shift, and go to state 17

    $default  reduce using rule 32 (case_statement)

    statement             go to state 58
    function_call         go to state 21
    import_statement      go to state 22
    switch_statement      go to state 23
    if_statement          go to state 24
    block                 go to state 25
    for_loop              go to state 26
    while_loop            go to state 27
    declaration           go to state 28
    assignment_expr       go to state 29
    logical_expr          go to state 30
    relational_expr       go to state 31
    additive_expr         go to state 32
    multiplicative_expr   go to state 33
    unary_expr            go to state 34
    primary_expr          go to state 35
    function_declaration  go to state 36
    variable_declaration  go to state 37


state 143

   41 for_loop: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SEMICOLON expression TOKEN_SEMICOLON expression TOKEN_RPAREN block .

    $default  reduce using rule 41 (for_loop)


state 144

   38 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 13

    block  go to state 145


state 145

   38 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block .

    $default  reduce using rule 38 (else_if_list)
