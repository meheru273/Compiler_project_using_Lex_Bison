Terminals unused in grammar

   TOKEN_INSERT
   TOKEN_INCREMENT
   TOKEN_DECREMENT
   TOKEN_NOT
   TOKEN_COMP
   TOKEN_LOGICAL_NOT
   TOKEN_GE
   TOKEN_LE
   TOKEN_PLUS_ASSIGN
   TOKEN_MINUS_ASSIGN
   TOKEN_MULT_ASSIGN
   TOKEN_DIV_ASSIGN


State 0 conflicts: 14 shift/reduce
State 11 conflicts: 15 shift/reduce
State 114 conflicts: 14 shift/reduce
State 119 conflicts: 14 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: /* empty */
    3               | statement
    4               | statement_list statement

    5 statement: declaration TOKEN_SEMICOLON
    6          | assignment_expr TOKEN_SEMICOLON
    7          | if_statement
    8          | switch_statement
    9          | function_declaration
   10          | import_statement TOKEN_SEMICOLON
   11          | function_call TOKEN_SEMICOLON
   12          | function_call block
   13          | TOKEN_BREAK TOKEN_SEMICOLON
   14          | block
   15          | TOKEN_EXERT TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_SEMICOLON

   16 parameter_list: parameter
   17               | parameter_list TOKEN_COMMA parameter
   18               | /* empty */

   19 parameter: TOKEN_INT TOKEN_ID
   20          | TOKEN_FLOAT TOKEN_ID

   21 function_call: TOKEN_ID TOKEN_LPAREN argument_list TOKEN_RPAREN

   22 argument_list: expression
   23              | argument_list TOKEN_COMMA expression
   24              | /* empty */

   25 import_statement: TOKEN_IMPORT TOKEN_ID

   26 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

   27 case_list: case_statement
   28          | case_list case_statement

   29 case_statement: TOKEN_CASE expression TOKEN_COLON statement_list
   30               | TOKEN_DEFAULT TOKEN_COLON statement_list

   31 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement

   32 block: TOKEN_LBRACE statement_list TOKEN_RBRACE
   33      | TOKEN_LBRACE TOKEN_RBRACE

   34 else_if_list: /* empty */
   35             | else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block

   36 else_statement: TOKEN_ELSE block
   37               | /* empty */

   38 expression: assignment_expr

   39 declaration: variable_declaration

   40 assignment_expr: TOKEN_ID TOKEN_ASSIGN expression
   41                | logical_expr

   42 logical_expr: relational_expr
   43             | logical_expr TOKEN_AND relational_expr
   44             | logical_expr TOKEN_OR relational_expr

   45 relational_expr: additive_expr
   46                | relational_expr TOKEN_GT additive_expr
   47                | relational_expr TOKEN_LT additive_expr
   48                | relational_expr TOKEN_EQ additive_expr
   49                | relational_expr TOKEN_NEQ additive_expr

   50 additive_expr: multiplicative_expr
   51              | additive_expr TOKEN_PLUS multiplicative_expr
   52              | additive_expr TOKEN_MINUS multiplicative_expr

   53 multiplicative_expr: unary_expr
   54                    | multiplicative_expr TOKEN_MULT unary_expr
   55                    | multiplicative_expr TOKEN_DIV unary_expr

   56 unary_expr: TOKEN_MINUS unary_expr
   57           | primary_expr

   58 primary_expr: TOKEN_INT_VALUE
   59             | TOKEN_FLOAT_VALUE
   60             | TOKEN_ID
   61             | TOKEN_LPAREN expression TOKEN_RPAREN

   62 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block

   63 variable_declaration: TOKEN_INT TOKEN_ID
   64                     | TOKEN_FLOAT TOKEN_ID


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_IF (258) 31
TOKEN_ELSE (259) 36
TOKEN_ELIF (260) 35
TOKEN_SWITCH (261) 26
TOKEN_CASE (262) 29
TOKEN_DEFAULT (263) 30
TOKEN_BREAK (264) 13
TOKEN_FUNCTION (265) 62
TOKEN_INT (266) 19 63
TOKEN_FLOAT (267) 20 64
TOKEN_IMPORT (268) 25
TOKEN_INSERT (269)
TOKEN_EXERT (270) 15
TOKEN_PLUS (271) 51
TOKEN_MINUS (272) 52 56
TOKEN_MULT (273) 54
TOKEN_DIV (274) 55
TOKEN_INCREMENT (275)
TOKEN_DECREMENT (276)
TOKEN_NOT (277)
TOKEN_COMP (278)
TOKEN_AND (279) 43
TOKEN_OR (280) 44
TOKEN_LOGICAL_NOT (281)
TOKEN_EQ (282) 48
TOKEN_NEQ (283) 49
TOKEN_GT (284) 46
TOKEN_LT (285) 47
TOKEN_GE (286)
TOKEN_LE (287)
TOKEN_ASSIGN (288) 40
TOKEN_PLUS_ASSIGN (289)
TOKEN_MINUS_ASSIGN (290)
TOKEN_MULT_ASSIGN (291)
TOKEN_DIV_ASSIGN (292)
TOKEN_SEMICOLON (293) 5 6 10 11 13 15
TOKEN_COLON (294) 29 30
TOKEN_LPAREN (295) 15 21 26 31 35 61 62
TOKEN_RPAREN (296) 15 21 26 31 35 61 62
TOKEN_LBRACE (297) 26 32 33
TOKEN_RBRACE (298) 26 32 33
TOKEN_ID (299) 19 20 21 25 40 60 62 63 64
TOKEN_INT_VALUE (300) 58
TOKEN_FLOAT_VALUE (301) 59
TOKEN_COMMA (302) 17 23


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
statement_list (50)
    on left: 2 3 4, on right: 1 4 29 30 32
statement (51)
    on left: 5 6 7 8 9 10 11 12 13 14 15, on right: 3 4
parameter_list (52)
    on left: 16 17 18, on right: 17 62
parameter (53)
    on left: 19 20, on right: 16 17
function_call (54)
    on left: 21, on right: 11 12
argument_list (55)
    on left: 22 23 24, on right: 21 23
import_statement (56)
    on left: 25, on right: 10
switch_statement (57)
    on left: 26, on right: 8
case_list (58)
    on left: 27 28, on right: 26 28
case_statement (59)
    on left: 29 30, on right: 27 28
if_statement (60)
    on left: 31, on right: 7
block (61)
    on left: 32 33, on right: 12 14 31 35 36 62
else_if_list (62)
    on left: 34 35, on right: 31 35
else_statement (63)
    on left: 36 37, on right: 31
expression (64)
    on left: 38, on right: 15 22 23 26 29 31 35 40 61
declaration (65)
    on left: 39, on right: 5
assignment_expr (66)
    on left: 40 41, on right: 6 38
logical_expr (67)
    on left: 42 43 44, on right: 41 43 44
relational_expr (68)
    on left: 45 46 47 48 49, on right: 42 43 44 46 47 48 49
additive_expr (69)
    on left: 50 51 52, on right: 45 46 47 48 49 51 52
multiplicative_expr (70)
    on left: 53 54 55, on right: 50 51 52 54 55
unary_expr (71)
    on left: 56 57, on right: 53 54 55 56
primary_expr (72)
    on left: 58 59 60 61, on right: 57
function_declaration (73)
    on left: 62, on right: 9
variable_declaration (74)
    on left: 63 64, on right: 39


state 0

    0 $accept: . program $end

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    TOKEN_IF           [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH       [reduce using rule 2 (statement_list)]
    TOKEN_BREAK        [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION     [reduce using rule 2 (statement_list)]
    TOKEN_INT          [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT        [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT       [reduce using rule 2 (statement_list)]
    TOKEN_EXERT        [reduce using rule 2 (statement_list)]
    TOKEN_MINUS        [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN       [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE       [reduce using rule 2 (statement_list)]
    TOKEN_ID           [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE    [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE  [reduce using rule 2 (statement_list)]
    $default           reduce using rule 2 (statement_list)

    program               go to state 15
    statement_list        go to state 16
    statement             go to state 17
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 1

   31 if_statement: TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement

    TOKEN_LPAREN  shift, and go to state 33


state 2

   26 switch_statement: TOKEN_SWITCH . TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_LPAREN  shift, and go to state 34


state 3

   13 statement: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 35


state 4

   62 function_declaration: TOKEN_FUNCTION . TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block

    TOKEN_ID  shift, and go to state 36


state 5

   63 variable_declaration: TOKEN_INT . TOKEN_ID

    TOKEN_ID  shift, and go to state 37


state 6

   64 variable_declaration: TOKEN_FLOAT . TOKEN_ID

    TOKEN_ID  shift, and go to state 38


state 7

   25 import_statement: TOKEN_IMPORT . TOKEN_ID

    TOKEN_ID  shift, and go to state 39


state 8

   15 statement: TOKEN_EXERT . TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_LPAREN  shift, and go to state 40


state 9

   56 unary_expr: TOKEN_MINUS . unary_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    unary_expr    go to state 42
    primary_expr  go to state 30


state 10

   61 primary_expr: TOKEN_LPAREN . expression TOKEN_RPAREN

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 44
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 11

   32 block: TOKEN_LBRACE . statement_list TOKEN_RBRACE
   33      | TOKEN_LBRACE . TOKEN_RBRACE

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_RBRACE       shift, and go to state 46
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    TOKEN_IF           [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH       [reduce using rule 2 (statement_list)]
    TOKEN_BREAK        [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION     [reduce using rule 2 (statement_list)]
    TOKEN_INT          [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT        [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT       [reduce using rule 2 (statement_list)]
    TOKEN_EXERT        [reduce using rule 2 (statement_list)]
    TOKEN_MINUS        [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN       [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE       [reduce using rule 2 (statement_list)]
    TOKEN_RBRACE       [reduce using rule 2 (statement_list)]
    TOKEN_ID           [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE    [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE  [reduce using rule 2 (statement_list)]

    statement_list        go to state 47
    statement             go to state 17
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 12

   21 function_call: TOKEN_ID . TOKEN_LPAREN argument_list TOKEN_RPAREN
   40 assignment_expr: TOKEN_ID . TOKEN_ASSIGN expression
   60 primary_expr: TOKEN_ID .

    TOKEN_ASSIGN  shift, and go to state 48
    TOKEN_LPAREN  shift, and go to state 49

    $default  reduce using rule 60 (primary_expr)


state 13

   58 primary_expr: TOKEN_INT_VALUE .

    $default  reduce using rule 58 (primary_expr)


state 14

   59 primary_expr: TOKEN_FLOAT_VALUE .

    $default  reduce using rule 59 (primary_expr)


state 15

    0 $accept: program . $end

    $end  shift, and go to state 50


state 16

    1 program: statement_list .
    4 statement_list: statement_list . statement

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    $default  reduce using rule 1 (program)

    statement             go to state 51
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 17

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


state 18

   11 statement: function_call . TOKEN_SEMICOLON
   12          | function_call . block

    TOKEN_SEMICOLON  shift, and go to state 52
    TOKEN_LBRACE     shift, and go to state 11

    block  go to state 53


state 19

   10 statement: import_statement . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 54


state 20

    8 statement: switch_statement .

    $default  reduce using rule 8 (statement)


state 21

    7 statement: if_statement .

    $default  reduce using rule 7 (statement)


state 22

   14 statement: block .

    $default  reduce using rule 14 (statement)


state 23

    5 statement: declaration . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 55


state 24

    6 statement: assignment_expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 56


state 25

   41 assignment_expr: logical_expr .
   43 logical_expr: logical_expr . TOKEN_AND relational_expr
   44             | logical_expr . TOKEN_OR relational_expr

    TOKEN_AND  shift, and go to state 57
    TOKEN_OR   shift, and go to state 58

    $default  reduce using rule 41 (assignment_expr)


state 26

   42 logical_expr: relational_expr .
   46 relational_expr: relational_expr . TOKEN_GT additive_expr
   47                | relational_expr . TOKEN_LT additive_expr
   48                | relational_expr . TOKEN_EQ additive_expr
   49                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 59
    TOKEN_NEQ  shift, and go to state 60
    TOKEN_GT   shift, and go to state 61
    TOKEN_LT   shift, and go to state 62

    $default  reduce using rule 42 (logical_expr)


state 27

   45 relational_expr: additive_expr .
   51 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   52              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64

    $default  reduce using rule 45 (relational_expr)


state 28

   50 additive_expr: multiplicative_expr .
   54 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   55                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 65
    TOKEN_DIV   shift, and go to state 66

    $default  reduce using rule 50 (additive_expr)


state 29

   53 multiplicative_expr: unary_expr .

    $default  reduce using rule 53 (multiplicative_expr)


state 30

   57 unary_expr: primary_expr .

    $default  reduce using rule 57 (unary_expr)


state 31

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 32

   39 declaration: variable_declaration .

    $default  reduce using rule 39 (declaration)


state 33

   31 if_statement: TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN block else_if_list else_statement

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 67
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 34

   26 switch_statement: TOKEN_SWITCH TOKEN_LPAREN . expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 68
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 35

   13 statement: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 13 (statement)


state 36

   62 function_declaration: TOKEN_FUNCTION TOKEN_ID . TOKEN_LPAREN parameter_list TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 69


state 37

   63 variable_declaration: TOKEN_INT TOKEN_ID .

    $default  reduce using rule 63 (variable_declaration)


state 38

   64 variable_declaration: TOKEN_FLOAT TOKEN_ID .

    $default  reduce using rule 64 (variable_declaration)


state 39

   25 import_statement: TOKEN_IMPORT TOKEN_ID .

    $default  reduce using rule 25 (import_statement)


state 40

   15 statement: TOKEN_EXERT TOKEN_LPAREN . expression TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 70
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 41

   60 primary_expr: TOKEN_ID .

    $default  reduce using rule 60 (primary_expr)


state 42

   56 unary_expr: TOKEN_MINUS unary_expr .

    $default  reduce using rule 56 (unary_expr)


state 43

   40 assignment_expr: TOKEN_ID . TOKEN_ASSIGN expression
   60 primary_expr: TOKEN_ID .

    TOKEN_ASSIGN  shift, and go to state 48

    $default  reduce using rule 60 (primary_expr)


state 44

   61 primary_expr: TOKEN_LPAREN expression . TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 71


state 45

   38 expression: assignment_expr .

    $default  reduce using rule 38 (expression)


state 46

   33 block: TOKEN_LBRACE TOKEN_RBRACE .

    $default  reduce using rule 33 (block)


state 47

    4 statement_list: statement_list . statement
   32 block: TOKEN_LBRACE statement_list . TOKEN_RBRACE

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_RBRACE       shift, and go to state 72
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    statement             go to state 51
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 48

   40 assignment_expr: TOKEN_ID TOKEN_ASSIGN . expression

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 73
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 49

   21 function_call: TOKEN_ID TOKEN_LPAREN . argument_list TOKEN_RPAREN

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    $default  reduce using rule 24 (argument_list)

    argument_list        go to state 74
    expression           go to state 75
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 50

    0 $accept: program $end .

    $default  accept


state 51

    4 statement_list: statement_list statement .

    $default  reduce using rule 4 (statement_list)


state 52

   11 statement: function_call TOKEN_SEMICOLON .

    $default  reduce using rule 11 (statement)


state 53

   12 statement: function_call block .

    $default  reduce using rule 12 (statement)


state 54

   10 statement: import_statement TOKEN_SEMICOLON .

    $default  reduce using rule 10 (statement)


state 55

    5 statement: declaration TOKEN_SEMICOLON .

    $default  reduce using rule 5 (statement)


state 56

    6 statement: assignment_expr TOKEN_SEMICOLON .

    $default  reduce using rule 6 (statement)


state 57

   43 logical_expr: logical_expr TOKEN_AND . relational_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    relational_expr      go to state 76
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 58

   44 logical_expr: logical_expr TOKEN_OR . relational_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    relational_expr      go to state 77
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 59

   48 relational_expr: relational_expr TOKEN_EQ . additive_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    additive_expr        go to state 78
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 60

   49 relational_expr: relational_expr TOKEN_NEQ . additive_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    additive_expr        go to state 79
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 61

   46 relational_expr: relational_expr TOKEN_GT . additive_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    additive_expr        go to state 80
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 62

   47 relational_expr: relational_expr TOKEN_LT . additive_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    additive_expr        go to state 81
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 63

   51 additive_expr: additive_expr TOKEN_PLUS . multiplicative_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    multiplicative_expr  go to state 82
    unary_expr           go to state 29
    primary_expr         go to state 30


state 64

   52 additive_expr: additive_expr TOKEN_MINUS . multiplicative_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    multiplicative_expr  go to state 83
    unary_expr           go to state 29
    primary_expr         go to state 30


state 65

   54 multiplicative_expr: multiplicative_expr TOKEN_MULT . unary_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    unary_expr    go to state 84
    primary_expr  go to state 30


state 66

   55 multiplicative_expr: multiplicative_expr TOKEN_DIV . unary_expr

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 41
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    unary_expr    go to state 85
    primary_expr  go to state 30


state 67

   31 if_statement: TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN block else_if_list else_statement

    TOKEN_RPAREN  shift, and go to state 86


state 68

   26 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression . TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_RPAREN  shift, and go to state 87


state 69

   62 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN . parameter_list TOKEN_RPAREN block

    TOKEN_INT    shift, and go to state 88
    TOKEN_FLOAT  shift, and go to state 89

    $default  reduce using rule 18 (parameter_list)

    parameter_list  go to state 90
    parameter       go to state 91


state 70

   15 statement: TOKEN_EXERT TOKEN_LPAREN expression . TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_RPAREN  shift, and go to state 92


state 71

   61 primary_expr: TOKEN_LPAREN expression TOKEN_RPAREN .

    $default  reduce using rule 61 (primary_expr)


state 72

   32 block: TOKEN_LBRACE statement_list TOKEN_RBRACE .

    $default  reduce using rule 32 (block)


state 73

   40 assignment_expr: TOKEN_ID TOKEN_ASSIGN expression .

    $default  reduce using rule 40 (assignment_expr)


state 74

   21 function_call: TOKEN_ID TOKEN_LPAREN argument_list . TOKEN_RPAREN
   23 argument_list: argument_list . TOKEN_COMMA expression

    TOKEN_RPAREN  shift, and go to state 93
    TOKEN_COMMA   shift, and go to state 94


state 75

   22 argument_list: expression .

    $default  reduce using rule 22 (argument_list)


state 76

   43 logical_expr: logical_expr TOKEN_AND relational_expr .
   46 relational_expr: relational_expr . TOKEN_GT additive_expr
   47                | relational_expr . TOKEN_LT additive_expr
   48                | relational_expr . TOKEN_EQ additive_expr
   49                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 59
    TOKEN_NEQ  shift, and go to state 60
    TOKEN_GT   shift, and go to state 61
    TOKEN_LT   shift, and go to state 62

    $default  reduce using rule 43 (logical_expr)


state 77

   44 logical_expr: logical_expr TOKEN_OR relational_expr .
   46 relational_expr: relational_expr . TOKEN_GT additive_expr
   47                | relational_expr . TOKEN_LT additive_expr
   48                | relational_expr . TOKEN_EQ additive_expr
   49                | relational_expr . TOKEN_NEQ additive_expr

    TOKEN_EQ   shift, and go to state 59
    TOKEN_NEQ  shift, and go to state 60
    TOKEN_GT   shift, and go to state 61
    TOKEN_LT   shift, and go to state 62

    $default  reduce using rule 44 (logical_expr)


state 78

   48 relational_expr: relational_expr TOKEN_EQ additive_expr .
   51 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   52              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64

    $default  reduce using rule 48 (relational_expr)


state 79

   49 relational_expr: relational_expr TOKEN_NEQ additive_expr .
   51 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   52              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64

    $default  reduce using rule 49 (relational_expr)


state 80

   46 relational_expr: relational_expr TOKEN_GT additive_expr .
   51 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   52              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64

    $default  reduce using rule 46 (relational_expr)


state 81

   47 relational_expr: relational_expr TOKEN_LT additive_expr .
   51 additive_expr: additive_expr . TOKEN_PLUS multiplicative_expr
   52              | additive_expr . TOKEN_MINUS multiplicative_expr

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64

    $default  reduce using rule 47 (relational_expr)


state 82

   51 additive_expr: additive_expr TOKEN_PLUS multiplicative_expr .
   54 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   55                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 65
    TOKEN_DIV   shift, and go to state 66

    $default  reduce using rule 51 (additive_expr)


state 83

   52 additive_expr: additive_expr TOKEN_MINUS multiplicative_expr .
   54 multiplicative_expr: multiplicative_expr . TOKEN_MULT unary_expr
   55                    | multiplicative_expr . TOKEN_DIV unary_expr

    TOKEN_MULT  shift, and go to state 65
    TOKEN_DIV   shift, and go to state 66

    $default  reduce using rule 52 (additive_expr)


state 84

   54 multiplicative_expr: multiplicative_expr TOKEN_MULT unary_expr .

    $default  reduce using rule 54 (multiplicative_expr)


state 85

   55 multiplicative_expr: multiplicative_expr TOKEN_DIV unary_expr .

    $default  reduce using rule 55 (multiplicative_expr)


state 86

   31 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . block else_if_list else_statement

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 95


state 87

   26 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN . TOKEN_LBRACE case_list TOKEN_RBRACE

    TOKEN_LBRACE  shift, and go to state 96


state 88

   19 parameter: TOKEN_INT . TOKEN_ID

    TOKEN_ID  shift, and go to state 97


state 89

   20 parameter: TOKEN_FLOAT . TOKEN_ID

    TOKEN_ID  shift, and go to state 98


state 90

   17 parameter_list: parameter_list . TOKEN_COMMA parameter
   62 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 99
    TOKEN_COMMA   shift, and go to state 100


state 91

   16 parameter_list: parameter .

    $default  reduce using rule 16 (parameter_list)


state 92

   15 statement: TOKEN_EXERT TOKEN_LPAREN expression TOKEN_RPAREN . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 101


state 93

   21 function_call: TOKEN_ID TOKEN_LPAREN argument_list TOKEN_RPAREN .

    $default  reduce using rule 21 (function_call)


state 94

   23 argument_list: argument_list TOKEN_COMMA . expression

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 102
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 95

   31 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block . else_if_list else_statement

    $default  reduce using rule 34 (else_if_list)

    else_if_list  go to state 103


state 96

   26 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE . case_list TOKEN_RBRACE

    TOKEN_CASE     shift, and go to state 104
    TOKEN_DEFAULT  shift, and go to state 105

    case_list       go to state 106
    case_statement  go to state 107


state 97

   19 parameter: TOKEN_INT TOKEN_ID .

    $default  reduce using rule 19 (parameter)


state 98

   20 parameter: TOKEN_FLOAT TOKEN_ID .

    $default  reduce using rule 20 (parameter)


state 99

   62 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 108


state 100

   17 parameter_list: parameter_list TOKEN_COMMA . parameter

    TOKEN_INT    shift, and go to state 88
    TOKEN_FLOAT  shift, and go to state 89

    parameter  go to state 109


state 101

   15 statement: TOKEN_EXERT TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_SEMICOLON .

    $default  reduce using rule 15 (statement)


state 102

   23 argument_list: argument_list TOKEN_COMMA expression .

    $default  reduce using rule 23 (argument_list)


state 103

   31 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list . else_statement
   35 else_if_list: else_if_list . TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block

    TOKEN_ELSE  shift, and go to state 110
    TOKEN_ELIF  shift, and go to state 111

    $default  reduce using rule 37 (else_statement)

    else_statement  go to state 112


state 104

   29 case_statement: TOKEN_CASE . expression TOKEN_COLON statement_list

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 113
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 105

   30 case_statement: TOKEN_DEFAULT . TOKEN_COLON statement_list

    TOKEN_COLON  shift, and go to state 114


state 106

   26 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list . TOKEN_RBRACE
   28 case_list: case_list . case_statement

    TOKEN_CASE     shift, and go to state 104
    TOKEN_DEFAULT  shift, and go to state 105
    TOKEN_RBRACE   shift, and go to state 115

    case_statement  go to state 116


state 107

   27 case_list: case_statement .

    $default  reduce using rule 27 (case_list)


state 108

   62 function_declaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAREN parameter_list TOKEN_RPAREN block .

    $default  reduce using rule 62 (function_declaration)


state 109

   17 parameter_list: parameter_list TOKEN_COMMA parameter .

    $default  reduce using rule 17 (parameter_list)


state 110

   36 else_statement: TOKEN_ELSE . block

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 117


state 111

   35 else_if_list: else_if_list TOKEN_ELIF . TOKEN_LPAREN expression TOKEN_RPAREN block

    TOKEN_LPAREN  shift, and go to state 118


state 112

   31 if_statement: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN block else_if_list else_statement .

    $default  reduce using rule 31 (if_statement)


state 113

   29 case_statement: TOKEN_CASE expression . TOKEN_COLON statement_list

    TOKEN_COLON  shift, and go to state 119


state 114

   30 case_statement: TOKEN_DEFAULT TOKEN_COLON . statement_list

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    TOKEN_IF           [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH       [reduce using rule 2 (statement_list)]
    TOKEN_BREAK        [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION     [reduce using rule 2 (statement_list)]
    TOKEN_INT          [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT        [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT       [reduce using rule 2 (statement_list)]
    TOKEN_EXERT        [reduce using rule 2 (statement_list)]
    TOKEN_MINUS        [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN       [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE       [reduce using rule 2 (statement_list)]
    TOKEN_ID           [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE    [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE  [reduce using rule 2 (statement_list)]
    $default           reduce using rule 2 (statement_list)

    statement_list        go to state 120
    statement             go to state 17
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 115

   26 switch_statement: TOKEN_SWITCH TOKEN_LPAREN expression TOKEN_RPAREN TOKEN_LBRACE case_list TOKEN_RBRACE .

    $default  reduce using rule 26 (switch_statement)


state 116

   28 case_list: case_list case_statement .

    $default  reduce using rule 28 (case_list)


state 117

   36 else_statement: TOKEN_ELSE block .

    $default  reduce using rule 36 (else_statement)


state 118

   35 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN . expression TOKEN_RPAREN block

    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_ID           shift, and go to state 43
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    expression           go to state 121
    assignment_expr      go to state 45
    logical_expr         go to state 25
    relational_expr      go to state 26
    additive_expr        go to state 27
    multiplicative_expr  go to state 28
    unary_expr           go to state 29
    primary_expr         go to state 30


state 119

   29 case_statement: TOKEN_CASE expression TOKEN_COLON . statement_list

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    TOKEN_IF           [reduce using rule 2 (statement_list)]
    TOKEN_SWITCH       [reduce using rule 2 (statement_list)]
    TOKEN_BREAK        [reduce using rule 2 (statement_list)]
    TOKEN_FUNCTION     [reduce using rule 2 (statement_list)]
    TOKEN_INT          [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT        [reduce using rule 2 (statement_list)]
    TOKEN_IMPORT       [reduce using rule 2 (statement_list)]
    TOKEN_EXERT        [reduce using rule 2 (statement_list)]
    TOKEN_MINUS        [reduce using rule 2 (statement_list)]
    TOKEN_LPAREN       [reduce using rule 2 (statement_list)]
    TOKEN_LBRACE       [reduce using rule 2 (statement_list)]
    TOKEN_ID           [reduce using rule 2 (statement_list)]
    TOKEN_INT_VALUE    [reduce using rule 2 (statement_list)]
    TOKEN_FLOAT_VALUE  [reduce using rule 2 (statement_list)]
    $default           reduce using rule 2 (statement_list)

    statement_list        go to state 122
    statement             go to state 17
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 120

    4 statement_list: statement_list . statement
   30 case_statement: TOKEN_DEFAULT TOKEN_COLON statement_list .

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    $default  reduce using rule 30 (case_statement)

    statement             go to state 51
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 121

   35 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression . TOKEN_RPAREN block

    TOKEN_RPAREN  shift, and go to state 123


state 122

    4 statement_list: statement_list . statement
   29 case_statement: TOKEN_CASE expression TOKEN_COLON statement_list .

    TOKEN_IF           shift, and go to state 1
    TOKEN_SWITCH       shift, and go to state 2
    TOKEN_BREAK        shift, and go to state 3
    TOKEN_FUNCTION     shift, and go to state 4
    TOKEN_INT          shift, and go to state 5
    TOKEN_FLOAT        shift, and go to state 6
    TOKEN_IMPORT       shift, and go to state 7
    TOKEN_EXERT        shift, and go to state 8
    TOKEN_MINUS        shift, and go to state 9
    TOKEN_LPAREN       shift, and go to state 10
    TOKEN_LBRACE       shift, and go to state 11
    TOKEN_ID           shift, and go to state 12
    TOKEN_INT_VALUE    shift, and go to state 13
    TOKEN_FLOAT_VALUE  shift, and go to state 14

    $default  reduce using rule 29 (case_statement)

    statement             go to state 51
    function_call         go to state 18
    import_statement      go to state 19
    switch_statement      go to state 20
    if_statement          go to state 21
    block                 go to state 22
    declaration           go to state 23
    assignment_expr       go to state 24
    logical_expr          go to state 25
    relational_expr       go to state 26
    additive_expr         go to state 27
    multiplicative_expr   go to state 28
    unary_expr            go to state 29
    primary_expr          go to state 30
    function_declaration  go to state 31
    variable_declaration  go to state 32


state 123

   35 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN . block

    TOKEN_LBRACE  shift, and go to state 11

    block  go to state 124


state 124

   35 else_if_list: else_if_list TOKEN_ELIF TOKEN_LPAREN expression TOKEN_RPAREN block .

    $default  reduce using rule 35 (else_if_list)
